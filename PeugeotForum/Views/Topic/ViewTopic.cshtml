@using PeugeotForum.Models
@using Microsoft.AspNet.Identity

@model TopicViewModel

@{
    ViewBag.Title = Model.Title;
}

<h2>@Model.Title</h2>

<span class="alert">
    Category: @Model.Category
</span>
<div>
    Author: @Model.Username
</div>


@for (int i = 0; i < Model.Posts.Count; i++)
{
    <div class="@(i % 2 == 0 ? "post postsShadowed" : "post postsNotShadowed")" id="@( Model.Posts[i].PostId)">
        @{
            @Html.DisplayFor(m => m.Posts[i])
        }
    </div>
}

<input type="submit" id="btnAddNewPost" class="btn-success btnAddNewPost" onclick="showNewPostArea()" value="Add New Post" />

@using (Html.BeginForm("AddNewPost", "Post", new { topicId = Model.TopicId }, FormMethod.Post, new { id = "postForm" })
)
{
    @Html.AntiForgeryToken()

    <div class="newPostArea">
        <textarea class="textAreaNewPost" name="postContent" id="textAreaNewPost"></textarea>
    </div>
    <div class="btnsNewPost" id="btnsNewPost">
        <input type="button" value="Cancel" id="btnCancel" onclick="revertBack()" class="btnCancel btn-danger" />
        <input type="button" value="Submit" 
               id="btnSubmitNewPost" 
               onclick="validateContent('#textAreaNewPost', '#postForm')" 
               class="btnSubmitNewPost btn-success" />
    </div>
}

@if (int.Parse(Request["page"]) != 0)
{
    @Html.ActionLink("Previous ", "ViewTopic", new
{
    topicId = Request["TopicId"],
    page = int.Parse(Request["page"]) - 1,
})
}

<span class="pageNmbr">@(int.Parse(Request["page"]) + 1)</span>

@if ((bool)TempData["LastPage"] != true)
{
    @Html.ActionLink(" Next", "ViewTopic", new
{
    topicId = Request["TopicId"],
    page = int.Parse(Request["page"]) + 1,
})
}


@section scripts {
    <script>
        function deletePost(selector) {
            var confirmMessage = confirm('Are you sure you want to delete this post?');
            if (confirmMessage === true) {
                $(selector).submit();
            } 
        }
        document.onload = (function () {
            @if (TempData["postAdded"] != null)
            {
                @:scrollToBottom();
            }
        }());
        
        function scrollToBottom() {
            $('html, body').animate({
                scrollTop: parseInt($("#btnAddNewPost").offset().top)
            }, 1000);
        }

        function showNewPostArea() {
            $('#btnAddNewPost').hide();
            $('#textAreaNewPost').show();
            $('#btnsNewPost').show();
        }

        function revertBack() {
            $('#btnAddNewPost').show();
            $('#textAreaNewPost').hide();
            $('#btnsNewPost').hide();
            $('#textAreaNewPost').val(undefined);
        }

        function validateContent(elementSelector, formSelector) {
            var length = $(elementSelector).val().length;
            if (length < 10) {
                alert('The length of your post should be at least 10 characters.');
            }
            else if (length > 1000) {
                alert('You have exceeded the maximum length of 1000 characters.');
            }
            else {
                $(formSelector).submit();
            }
        }
    </script>
}

